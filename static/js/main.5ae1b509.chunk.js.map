{"version":3,"sources":["components/styles/SearchBar.styles.ts","components/SearchBar.tsx","assets/images/spinner.gif","components/styles/MainSection.styles.ts","components/styles/Image.styles.ts","components/styles/Flex.styled.ts","components/MainSection.tsx","globalStyles.ts","assets/images/logo.png","components/Logo.tsx","components/styles/Header.styles.ts","components/Header.tsx","App.tsx","index.tsx"],"names":["StyledSearchBar","styled","input","SearchBar","props","onChange","value","setState","searchValue","getFilterValue","state","type","this","placeholder","e","target","Component","StyledMainSection","div","PaddedContainer","padding","bg","GridView","GridItemContainer","GridItemHeading","h2","GridItemImageContainer","GridItemImage","img","GridItemDescription","p","GridItemPrice","Image","height","Flex","MainSection","useState","products","setProducts","filteredProducts","setFilteredProducts","filterValue","setFilterValue","isLoading","setIsLoading","useEffect","axios","method","baseURL","url","then","res","data","catch","err","Error","finally","timeoutId","setTimeout","newProducts","filter","product","title","toLowerCase","includes","clearTimeout","src","spinner","alt","length","map","image","description","price","id","GlobalStyles","createGlobalStyle","Logo","logo","StyledHeader","Header","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEaA,EAAkBC,IAAOC,MAAV,kR,OCmCbC,E,kDAzBb,WAAYC,GAAwB,IAAD,8BACjC,cAAMA,IAORC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEC,YAAaF,IAC7B,EAAKF,MAAMK,eAAeH,IAP1B,EAAKI,MAAQ,CACXF,YAAa,IAJkB,E,0CAanC,WAAU,IAAD,OACP,OACE,cAACR,EAAD,CACEW,KAAK,OACLL,MAAOM,KAAKF,MAAMF,YAClBK,YAAY,qBACZR,SAAU,SAACS,GAAD,OAAqC,EAAKT,SAASS,EAAEC,OAAOT,c,GApBtDU,aCXT,MAA0B,oCCO5BC,EAAoBhB,IAAOiB,IAAV,4FAMjBC,EAAkBlB,IAAOiB,IAAV,+FAEf,qBAAGE,WACM,qBAAGC,MAGZC,EAAWrB,IAAOiB,IAAV,4LASRK,EAAoBtB,IAAOiB,IAAV,4ZAqBjBM,EAAkBvB,IAAOwB,GAAV,0OAYfC,EAAyBzB,IAAOiB,IAAV,uKAQtBS,EAAgB1B,IAAO2B,IAAV,oHAObC,EAAsB5B,IAAO6B,EAAV,+KAUnBC,EAAgB9B,IAAOiB,IAAV,sQChFbc,EAAQ/B,IAAO2B,IAAV,4CACN,qBAAGK,UCLFC,EAAOjC,IAAOiB,IAAV,kGCmGFiB,EA1EK,WAClB,MAAgCC,mBAAwB,IAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgDF,mBAAwB,IAAxE,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KA0BA,OAxBAC,qBAAU,WACRD,GAAa,GAEbE,IAAM,CACJC,OAAQ,MACRC,QAAS,2BACTC,IAAK,mCAEJC,MAAK,SAACC,GACLb,EAAYa,EAAIC,SAEjBC,OAAM,SAACC,GAAU,MAAM,IAAIC,MAAMD,MACjCE,SAAQ,kBAAMZ,GAAa,QAC7B,IAEHC,qBAAU,WACR,IAAMY,EAAYC,YAAW,WAC3B,IAAMC,EAActB,EAASuB,QAAO,SAACC,GAAD,OAAaA,EAAQC,MAAMC,cAAcC,SAASvB,EAAYsB,kBAElGvB,EAAoBmB,KACnB,MACH,OAAO,kBAAMM,aAAaR,MACzB,CAAChB,IAGF,eAACxB,EAAD,WACE,cAACE,EAAD,CAAiBC,QAAQ,QAAQC,GAAG,UAApC,SACE,cAACa,EAAD,UACE,cAAC,EAAD,CACEzB,eAAgB,SAACH,GACfoC,EAAepC,UAMtBqC,GACD,cAACT,EAAD,UACE,cAACF,EAAD,CAAOkC,IAAKC,EAASC,IAAI,aAAanC,OAAO,YAG/C,cAACd,EAAD,UACE,cAACe,EAAD,UACgC,IAA5BK,EAAiB8B,QAAgB5B,EAAY4B,OAAS,GAClD,iGAIV,cAAC/C,EAAD,WACIiB,EAAiB8B,OAAS,EAAI9B,EAAmBF,GAAUiC,KAAI,SAACT,GAAD,OAC/D,eAACtC,EAAD,WACE,cAACC,EAAD,UAAkBqC,EAAQC,QAC1B,cAACpC,EAAD,UACE,cAACC,EAAD,CAAeuC,IAAKL,EAAQU,MAAOH,IAAI,cAEzC,cAACvC,EAAD,UAAsBgC,EAAQW,cAC9B,eAACzC,EAAD,wBAEG,IACA8B,EAAQY,WATWZ,EAAQa,aCjF7BC,EAAeC,YAAH,0vCCFV,MAA0B,iCCU1BC,EANF,kBACX,8BACE,cAAC7C,EAAD,CAAOkC,IAAKY,EAAMV,IAAI,OAAOnC,OAAO,aCJ3B8C,EAAe9E,IAAOiB,IAAV,6HCWV8D,EAPgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC7B,eAACF,EAAD,WACE,cAAC,EAAD,IACCE,MCIUC,EARH,kBACV,qCACE,cAACP,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLJQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5ae1b509.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.input`\n  display: flex;\n  width: 50%;\n  min-width: 12em;\n  max-width: 32em;\n  padding: 1.25em;\n  font-size: 1.25rem;\n  border: 0;\n  border-radius: 10px;\n  outline: none;\n\n  &:focus {\n    box-shadow: rgba(253, 145, 145, 249) 1px 1px 16px;\n  }`;\n","import React, { ChangeEvent, Component } from 'react';\nimport { StyledSearchBar } from './styles/SearchBar.styles';\n\ntype SearchBarProps = {\n  getFilterValue: (value: string) => void;\n}\n\ntype SearchBarState = {\n  searchValue: string;\n}\n\nclass SearchBar extends Component<SearchBarProps, SearchBarState> {\n  constructor(props: SearchBarProps) {\n    super(props);\n\n    this.state = {\n      searchValue: '',\n    };\n  }\n\n  onChange = (value: string) => {\n    this.setState({ searchValue: value });\n    this.props.getFilterValue(value);\n  }\n\n  render() {\n    return (\n      <StyledSearchBar\n        type=\"text\"\n        value={this.state.searchValue}\n        placeholder=\"Search products...\"\n        onChange={(e:ChangeEvent<HTMLInputElement>) => this.onChange(e.target.value)}\n      />\n    );\n  }\n}\n\nexport default SearchBar;\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import styled from 'styled-components';\n\ntype PaddedContainerProps = {\n    padding: string;\n    bg: string;\n}\n\nexport const StyledMainSection = styled.div`\n  display: grid;\n  margin: 2.5em auto;\n  border-radius: 5px;\n`;\n\nexport const PaddedContainer = styled.div`\n  margin: 0 0 2.5em 0;\n  padding: ${({ padding }: PaddedContainerProps) => padding};\n  background-color: ${({ bg }: PaddedContainerProps) => bg};\n`;\n\nexport const GridView = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(17rem, 1fr));\n  gap: 1.5rem;\n  justify-content: center;\n  width: 80%;\n  margin: 0 auto;\n`;\n\nexport const GridItemContainer = styled.div`\n  display: grid;\n  grid-template-rows: 10rem 1fr 8rem 4rem;\n  align-items: center;\n  width: 100%;\n  margin: 0 auto;\n  max-width: 25em;\n  box-shadow: rgba(16, 16, 16, 0.36) 0 2px 8px 0;;\n  overflow: hidden;\n  transition: 0.2s;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:active {\n    box-shadow: rgba(253, 145, 145, 249) -1px 1px 16px;\n    transform: scale(0.98);\n  }\n`;\n\nexport const GridItemHeading = styled.h2`\n  font-family: 'Oswald', sans-serif;\n  font-size: 1.15rem;\n  font-weight: 600;\n  line-height: 1.2em;\n  padding: 0.5em 1em 0.5em 0.75em;\n  \n  @media (min-width: 768px) {\n    font-size: 1.25rem;\n  }\n`;\n\nexport const GridItemImageContainer = styled.div`\n  display: flex;\n  height: 22em;\n  padding: 1em;\n  border-top: 0.25rem solid floralwhite;\n  border-bottom: 0.25rem solid floralwhite;\n`;\n\nexport const GridItemImage = styled.img`\n  height: 100%;\n  width: 100%;\n  transition: transform 0.3s;\n  object-fit: contain;\n`;\n\nexport const GridItemDescription = styled.p`\n  display: flex;\n  font-size: 0.65rem;\n  padding: 0.325em 0.65em 0.325em 0.65em;\n\n  @media (min-width: 768px) {\n    font-size: 0.75rem;\n  }\n`;\n\nexport const GridItemPrice = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 1rem;\n  font-weight: 700;\n  padding: 0.65em 0.65em 0.325em 0.65em;\n  border-top: 0.25rem solid floralwhite;\n\n  @media (min-width: 768px) {\n    font-size: 1.25rem;\n  }\n`;\n","import styled from 'styled-components';\n\ntype ImageProps = {\n    height: string;\n}\n\nexport const Image = styled.img<ImageProps>`\n  height: ${({ height }: ImageProps) => height};\n`;\n","import styled from 'styled-components';\n\nexport const Flex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport spinner from '../assets/images/spinner.gif';\nimport {\n  StyledMainSection,\n  PaddedContainer,\n  GridView,\n  GridItemContainer,\n  GridItemHeading,\n  GridItemImageContainer,\n  GridItemImage,\n  GridItemDescription,\n  GridItemPrice,\n} from './styles/MainSection.styles';\nimport { Image } from './styles/Image.styles';\nimport { Flex } from './styles/Flex.styled';\n\ntype ProductType = {\n    id: number;\n    title: string;\n    price: string;\n    category: string;\n    description: string;\n    image: string;\n}\n\nconst MainSection = () => {\n  const [products, setProducts] = useState<ProductType[]>([]);\n  const [filteredProducts, setFilteredProducts] = useState<ProductType[]>([]);\n  const [filterValue, setFilterValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    axios({\n      method: 'get',\n      baseURL: 'https://fakestoreapi.com',\n      url: '/products/category/electronics',\n    })\n      .then((res) => {\n        setProducts(res.data);\n      })\n      .catch((err) => { throw new Error(err); })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      const newProducts = products.filter((product) => product.title.toLowerCase().includes(filterValue.toLowerCase()));\n\n      setFilteredProducts(newProducts);\n    }, 1500);\n    return () => clearTimeout(timeoutId);\n  }, [filterValue]);\n\n  return (\n    <StyledMainSection>\n      <PaddedContainer padding=\"2em 0\" bg=\"#F5E9E2\">\n        <Flex>\n          <SearchBar\n            getFilterValue={(value) => {\n              setFilterValue(value);\n            }}\n          />\n        </Flex>\n      </PaddedContainer>\n\n      {isLoading && (\n      <Flex>\n        <Image src={spinner} alt=\"Loading...\" height=\"150px\" />\n      </Flex>\n      )}\n      <PaddedContainer>\n        <Flex>\n          {(filteredProducts.length === 0 && filterValue.length > 0)\n            && (<div>The search returned no specific results. Please, try again</div>)}\n        </Flex>\n      </PaddedContainer>\n\n      <GridView>\n        {(filteredProducts.length > 0 ? filteredProducts : products).map((product) => (\n          <GridItemContainer key={product.id}>\n            <GridItemHeading>{product.title}</GridItemHeading>\n            <GridItemImageContainer>\n              <GridItemImage src={product.image} alt=\"product\" />\n            </GridItemImageContainer>\n            <GridItemDescription>{product.description}</GridItemDescription>\n            <GridItemPrice>\n              Price: EUR\n              {' '}\n              {product.price}\n            </GridItemPrice>\n          </GridItemContainer>\n        ))}\n      </GridView>\n    </StyledMainSection>\n  );\n};\n\nexport default MainSection;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100;300;500;700&family=Oswald:wght@200;600&display=swap');\n\n// CSS reset\n\n* {\n  box-sizing: border-box;\n}\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  vertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n  font-family: 'Montserrat', sans-serif;\n}\n\nol, ul {\n  list-style: none;\n}\n\nblockquote, q {\n  quotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n`;\n","export default __webpack_public_path__ + \"static/media/logo.323a16fc.png\";","import React from 'react';\nimport logo from '../assets/images/logo.png';\nimport { Image } from './styles/Image.styles';\n\nconst Logo = () => (\n  <div>\n    <Image src={logo} alt=\"logo\" height=\"150px\" />\n  </div>\n);\n\nexport default Logo;\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 4em 1em;\n  background-color: #0B0014;\n`;\n","import React, { FC } from 'react';\nimport Logo from './Logo';\nimport { StyledHeader } from './styles/Header.styles';\n\ntype HeaderProps = {}\n\nconst Header:FC<HeaderProps> = ({ children }) => (\n  <StyledHeader>\n    <Logo />\n    {children}\n  </StyledHeader>\n);\n\nexport default Header;\n","import React from 'react';\nimport MainSection from './components/MainSection';\nimport { GlobalStyles } from './globalStyles';\nimport Header from './components/Header';\n\nconst App = () => (\n  <>\n    <GlobalStyles />\n    <Header />\n    <MainSection />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}